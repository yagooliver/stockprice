name: CI

on:
  pull_request:
  push:
    branches: [ "main", "develop" ]
env:
  DOTNET_VERSION: '6.0.x'
  AZURE_WEBAPP_NAME: apistockprice
  AZURE_WEBAPP_PACKAGE_PATH: '/root'
jobs:
  build:
    name: build
    runs-on: [ ubuntu-latest ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Install dependencies
        run: dotnet restore src/
      - name: Build
        run: dotnet publish ./src/StockPrice.Api/ --configuration Release --no-restore -o /home/runner/stockprice.api
      - uses: actions/upload-artifact@v3
        with:
          name: publish-artifact
          path: /home/runner/stockprice.api/
  Azure-Deploy:
    name: Deploy on Azure
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: publish-artifact
          path: /home/runner/stockprice.api
      - name: Go to folder
        shell: bash
        run: |
          mv /home/runner/stockprice.api ./apistockprice
      - name: Deploy to Azure WebApps
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE.WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C935D7097D72414DAFE5AF019CC33894 }}
          package: ./apistockprice
  Deploy:
    name: Deploy
    runs-on: [ ubuntu-latest ]
    needs: [ build ]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develp')
    steps:
      - uses: actions/checkout@v2
      - name: Configure SSH
        run: |
          sudo apt install sshpass
          mkdir -p /home/runner/.ssh/
          echo "${{secrets.SSH_PRIVATE_KEY}}" > /home/runner/.ssh/private.key
          sudo chmod 600 /home/runner/.ssh/private.key
          ssh-keyscan ${{secrets.REMOTE_HOST}} >> /home/runner/.ssh/known_hosts
          cat > /home/runner/.ssh/ssh.config <<END
          Host deploy_server
            HostName ${{secrets.REMOTE_HOST}}
            User ${{secrets.REMOTE_USER}}
            IdentityFile /home/runner/.ssh/private.key
            StrictHostKeyChecking no
          END

        shell: bash
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: publish-artifact
          path: /home/runner/stockprice.api
      - name: Creating Backup
        shell: bash
        run: |
           ssh -T -F /home/runner/.ssh/ssh.config deploy_server 'mkdir backup; \
             echo ${{secrets.REMOTE_USER_PASS}} | sudo -S cp -r /var/www/stockprice.api ~/backup'    
      - name: Copy Files to server
        shell: bash
        run: | 
          ssh -T -F /home/runner/.ssh/ssh.config deploy_server 'echo ${{secrets.REMOTE_USER_PASS}} | sudo -S systemctl stop stockprice.api.service'
          scp -F /home/runner/.ssh/ssh.config -r /home/runner/stockprice.api deploy_server:/var/www/
          ssh -T -F /home/runner/.ssh/ssh.config deploy_server 'echo ${{secrets.REMOTE_USER_PASS}} | sudo -S systemctl daemon-reload'
          ssh -T -F /home/runner/.ssh/ssh.config deploy_server 'echo ${{secrets.REMOTE_USER_PASS}} | sudo -S systemctl restart stockprice.api.service'


          
